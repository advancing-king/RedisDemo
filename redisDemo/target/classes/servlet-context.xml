<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns = "http://www.springframework.org/schema/beans"
	xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/mvc 
                        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
                        http://www.springframework.org/schema/context  
    					http://www.springframework.org/schema/context/spring-context.xsd
    					http://www.springframework.org/schema/aop
    					http://www.springframework.org/schema/aop/spring-aop.xsd">

    
     <mvc:annotation-driven/>
    <!-- 设置使用注解的类所在的jar包 -->
    <context:component-scan base-package="com.my.advance"></context:component-scan>

  <!-- 这两个类用来启动基于Spring MVC的注解功能，将控制器与方法映射加入到容器中 -->
    <bean
        class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
    <bean
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
        
    <!-- 对转向页面的路径解析。prefix：前缀， suffix：后缀 -->
    <bean id="viewResolver"
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
    <!-- DispatcherServlet本身并没有实现任何解析multipart请求数据的功能，
将该任务交给了spring中MultipartResolver策略接口的实现.
spring内置了两种resolver:
1.1.CommonsMultipartResolver:使用jakarta Commons FileUpload 解析multipart请求
1.2 StandardServletMultipartResolver:依赖于Servlet3.0对multipart请求的支持(始于spring3.1)
后者为优选方案，因为使用Servlet提供的功能支持，不需要依赖其他项目，如果我们需要将应用部署到servlet3.0之前的容器中
，或者spring3.1之前的版本就可能需要前者了，
前者需要commons-fileupload-1.1.1.jar

commons-io-1.3.2.jar两个jar包的支持  -->
	 <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">   
          <property name="maxUploadSize"><value>100000</value></property> 
          <property name="defaultEncoding"><value>UTF-8</value></property> 
    </bean> 
    
    	
</beans>